#!/usr/bin/env bash

OOP=../oop

. $OOP/oop

Point() {
    . $OOP/class extends Object $@
    set -- ${@:3}

    case $__method__ in

        type)
            echo "Object has type" ${this[__class__]}
        ;;

        static_method)
            (( Point[counter]++ ))
            echo "Static method called"
        ;;

        print)
            echo "(${this[x]}; ${this[y]})"
        ;;

        move)
            (( this[x]++ ))
            (( this[y]++ ))
        ;;

        distance)
            # we can do type checking!
            . $OOP/assume _point Point $1 || return
            
            local x12=$(( ${this[x]} - ${_point[x]} ))
            [ $x12 -lt 0 ] && x12=$((-x12))
            local y12=$(( ${this[y]} - ${_point[y]} ))
            [ $y12 -lt 0 ] && y12=$((-y12))

            # bash is too bad in math, sorry
            echo $(perl -e "print sqrt($x12 ** 2 + $y12 ** 2)")
        ;;

        new)
            $Parent $__class__ $@

            this[x]=$1
            this[y]=$2
        ;;

        *)
            $Parent $@
        ;;

    esac
}

declare -A Point

Point[counter]=0

